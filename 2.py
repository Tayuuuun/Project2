import telebot
from utils import calculate_daily_calories

# –°–ª–æ–≤–∞—Ä–∏
dish_recipes = {}  # –±–ª—é–¥–∞ –∏ —Ä–µ—Ü–µ–ø—Ç—ã
user_states = {}  # —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_characteristics = {}  # —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

# –°–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
WAITING_FOR_DISH_NAME = 'waiting_for_dish_name'
WAITING_FOR_RECIPE = 'waiting_for_recipe'
WAITING_FOR_RECIPE_NAME = 'waiting_for_recipe_name'
WAITING_FOR_CALORIE_INFO = 'waiting_for_calorie_info'
WAITING_FOR_HEIGHT = 'waiting_for_height'
WAITING_FOR_WEIGHT = 'waiting_for_weight'
WAITING_FOR_AGE = 'waiting_for_age'

# –ü—Ä–∏–º–µ—Ä –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç–∏ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ (–Ω–∞ 100 –≥)
calories_per_ingredient = {
    '–∫—É—Ä–∏—Ü–∞': 239,
    '—Ä–∏—Å': 130,
    '–º–æ—Ä–∫–æ–≤—å': 41,
    '–ª—É–∫': 40,
    '–∫–∞—Ä—Ç–æ—Ñ–µ–ª—å': 77,
    '–ø–æ–º–∏–¥–æ—Ä': 18,
    '–ø–µ—Ä–µ—Ü': 20,
}


@bot.message_handler(commands=['start'])
def start(message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.

    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add('–Ω–æ–≤–µ–Ω—å–∫–æ–µ –±–ª—é–¥–æ', '—Ä–µ—Ü–µ–ø—Ç–∏–∫', '—Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –∫–∞–ª–æ—Ä–∏–∏', '—Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏')
    bot.send_message(message.chat.id, '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –¥–∞–≤–∞–π—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å –ø—Ä–∏–≥–æ—Ç–æ–≤–∏–º, –∑–∞–ø–∏—à–∏—Ç–µ —Ä–µ—Ü–µ–ø—Ç –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞',
                     reply_markup=keyboard)


@bot.message_handler(func=lambda message: message.text == '–Ω–æ–≤–µ–Ω—å–∫–æ–µ –±–ª—é–¥–æ')
def new_dish(message):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤–æ–≥–æ –±–ª—é–¥–∞.

    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    bot.send_message(message.chat.id, '–î–∞–≤–∞–π—Ç–µ –ø—Ä–∏–¥—É–º–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –±—É–¥—É—â–µ–º—É —à–µ–¥–µ–≤—Ä—É')
    user_states[message.chat.id] = WAITING_FOR_DISH_NAME


@bot.message_handler(func=lambda message: message.text == '—Ä–µ—Ü–µ–ø—Ç–∏–∫')
def get_recipe(message):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Ä–µ—Ü–µ–ø—Ç.

    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ —à–µ–¥–µ–≤—Ä–∞')
    user_states[message.chat.id] = WAITING_FOR_RECIPE_NAME


@bot.message_handler(func=lambda message: message.text == '—Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏')
def get_characteristics(message):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    bot.send_message(message.chat.id,
                     '–î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º —Å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –≤–∞—à–∏—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫. –í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ä–æ—Å—Ç –≤ —Å–∞–Ω—Ç–∏–º–µ—Ç—Ä–∞—Ö:')
    user_states[message.chat.id] = WAITING_FOR_HEIGHT


@bot.message_handler(func=lambda message: user_states.get(message.chat.id) == WAITING_FOR_HEIGHT)
def handle_height(message):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ —Ä–æ—Å—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    try:
        height = float(message.text)
        user_characteristics[message.chat.id] = {'height': height}
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–µ—Å –≤ –∫–∏–ª–æ–≥—Ä–∞–º–º–∞—Ö:')
        user_states[message.chat.id] = WAITING_FOR_WEIGHT
    except ValueError:
        bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.')


@bot.message_handler(func=lambda message: user_states.get(message.chat.id) == WAITING_FOR_WEIGHT)
def handle_weight(message):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –≤–µ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    try:
        weight = float(message.text)
        user_characteristics[message.chat.id]['weight'] = weight
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç:')
        user_states[message.chat.id] = WAITING_FOR_AGE
    except ValueError:
        bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.')


@bot.message_handler(func=lambda message: user_states.get(message.chat.id) == WAITING_FOR_AGE)
def handle_age(message):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –≤–æ–∑—Ä–∞—Å—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    try:
        age = int(message.text)
        user_characteristics[message.chat.id]['age'] = age
        calories = calculate_daily_calories(user_characteristics[message.chat.id])
        bot.send_message(message.chat.id,
                         f"–í–∞—à–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã. –í–∞–º –Ω—É–∂–Ω–æ —É–ø–æ—Ç—Ä–µ–±–ª—è—Ç—å –ø—Ä–∏–º–µ—Ä–Ω–æ {calories:.2f} –∫–∫–∞–ª –≤ –¥–µ–Ω—å.")
        user_states[message.chat.id] = None
    except ValueError:
        bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.')


@bot.message_handler(func=lambda message: user_states.get(message.chat.id) == WAITING_FOR_DISH_NAME)
def handle_dish_name(message):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –±–ª—é–¥–∞.

    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    dish_name = message.text
    bot.send_message(message.chat.id, f"–û–æ —Å—É–ø–µ—Ä, –∑–≤—É—á–∏—Ç –≤–∫—É—Å–Ω–æ, —Ç–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏—Ç–µ —Ä–µ—Ü–µ–ø—Ç '{dish_name}':")
    user_states[message.chat.id] = WAITING_FOR_RECIPE
    dish_recipes[dish_name] = None


@bot.message_handler(func=lambda message: user_states.get(message.chat.id) == WAITING_FOR_RECIPE)
def handle_recipe(message):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ—Ü–µ–ø—Ç–∞.

    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    recipe = message.text
    dish_name = [key for key, value in dish_recipes.items() if value is None][0]
    dish_recipes[dish_name] = recipe
    bot.send_message(message.chat.id, f"–ë—É–¥—É –∂–¥–∞—Ç—å, –∫–æ–≥–¥–∞ –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å '{dish_name}': {recipe}")
    user_states[message.chat.id] = None


@bot.message_handler(func=lambda message: user_states.get(message.chat.id) == WAITING_FOR_RECIPE_NAME)
def handle_recipe_name(message):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –±–ª—é–¥–∞.

    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    dish_name = message.text
    if dish_name in dish_recipes:
        recipe = dish_recipes[dish_name]
        bot.send_message(message.chat.id, f"–í–æ—Ç —Ä–µ—Ü–µ–ø—Ç –±–ª—é–¥–∞ '{dish_name}' , –ø—Ä–∏—è—Ç–Ω–æ–≥–æ –∞–ø–ø–µ—Ç–∏—Ç–∞ü§ç: {recipe}")
    else:
        bot.send_message(message.chat.id, f"–ë–ª—é–¥–∞ '{dish_name}' —Ç—É—Ç –Ω–µ—Ç(")
    user_states[message.chat.id] = None


@bot.message_handler(func=lambda message: message.text == '—Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –∫–∞–ª–æ—Ä–∏–∏')
def calculate_calories(message):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Ä–∞—Å—á–µ—Ç –∫–∞–ª–æ—Ä–∏–π.

    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –∏ –∏—Ö –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä: –∫—É—Ä–∏—Ü–∞ 200, —Ä–∏—Å 100)')
    user_states[message.chat.id] = WAITING_FOR_CALORIE_INFO


@bot.message_handler(func=lambda message: user_states.get(message.chat.id) == WAITING_FOR_CALORIE_INFO)
def handle_calorie_info(message):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–∞–ª–æ—Ä–∏—è—Ö.

    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    ingredients = message.text.split(',')
    total_calories = 0
    for ingredient in ingredients:
        try:
            name, weight = ingredient.strip().split()
            weight = float(weight)
            if name in calories_per_ingredient:
                total_calories += (calories_per_ingredient[name] * weight) / 100
            else:
                bot.send_message(message.chat.id, f"–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç '{name}' –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        except ValueError:
            bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç '–∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ'.")
            return

    bot.send_message(message.chat.id, f"–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–ª–æ—Ä–∏–π: {total_calories:.2f} –∫–∫–∞–ª.")
    user_states[message.chat.id] = None